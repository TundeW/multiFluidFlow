    // Geometric Projection Method in OpenFoam to obtain the densities vf1 and vf2 for each element
    // It projects a pipe of inner radius ra and outer radius rb unto the mesh
    #include <cmath>

    //vector x_0(0,0,0);
    //vector x_f(0,0,0.256);
    int len = 6;
    len = x_init_size/4;
    //Info<< "I want to create Array of vectors" << endl;
    //vector X_0[len] = {vector (0.075,0.025,0), vector (0.075,0.075,0), vector (0.025,0.025,0), vector (0.025,0.075,0)};
    //vector X_f[len] = {vector (0.075,0.025,0.256), vector (0.075,0.075,0.256), vector (0.025,0.025,0.256), vector (0.025,0.075,0.256)};
    //vector X_0[len] = {vector (0.018,0.018,0), vector (0.0543,0.018,0), vector (0.0906,0.018,0), vector (0.1269,0.018,0), vector (0.1632,0.018,0), vector (0.1995,0.018,0), vector (0.2358,0.018,0), vector (0.018,0.0543,0), vector (0.0543,0.0543,0), vector (0.0906,0.0543,0), vector (0.1269,0.0543,0), vector (0.1632,0.0543,0), vector (0.1995,0.0543,0), vector (0.2358,0.0543,0), vector (0.018,0.0906,0), vector (0.0543,0.0906,0), vector (0.0906,0.0906,0), vector (0.1269,0.0906,0), vector (0.1632,0.0906,0), vector (0.1995,0.0906,0), vector (0.2358,0.0906,0)};
    //vector X_f[len] = {vector (0.018,0.018,0.256), vector (0.0543,0.018,0.256), vector (0.0906,0.018,0.256), vector (0.1269,0.018,0.256), vector (0.1632,0.018,0.256), vector (0.1995,0.018,0.256), vector (0.2358,0.018,0.256), vector (0.018,0.0543,0.256), vector (0.0543,0.0543,0.256), vector (0.0906,0.0543,0.256), vector (0.1269,0.0543,0.256), vector (0.1632,0.0543,0.256), vector (0.1995,0.0543,0.256), vector (0.2358,0.0543,0.256), vector (0.018,0.0906,0.256), vector (0.0543,0.0906,0.256), vector (0.0906,0.0906,0.256), vector (0.1269,0.0906,0.256), vector (0.1632,0.0906,0.256), vector (0.1995,0.0906,0.256), vector (0.2358,0.0906,0.256)};
    //vector X_0[len] = {vector (0,0,0)};
    //vector X_f[len] = {vector (0,0,0.256)};
    //vector X_0[len] = {vector (0.175,0.025,0), vector (0.025,0.025,0), vector (0.125,0.025,0), vector (0.075,0.025,0), vector (0.225,0.025,0), vector (0.025,0.075,0), vector (0.075,0.075,0), vector (0.125,0.075,0), vector (0.175,0.075,0), vector (0.225,0.075,0)};
    //vector X_f[len] = {vector (0.175,0.025,0.256), vector (0.025,0.025,0.256), vector (0.125,0.025,0.256), vector (0.075,0.025,0.256), vector (0.225,0.025,0.256), vector (0.025,0.075,0.256), vector (0.075,0.075,0.256), vector (0.125,0.075,0.256), vector (0.175,0.075,0.256), vector (0.225,0.075,0.256)};
    //vector X_0[len] = {vector (0.025,0.025,0), vector (0.175,0.025,0), vector (0.075,0.075,0), vector (0.125,0.075,0), vector (0.225,0.075,0), vector (0.075,0.025,0)};
    //vector X_f[len] = {vector (0.025,0.025,0.256), vector (0.175,0.025,0.256), vector (0.075,0.075,0.256), vector (0.125,0.075,0.256), vector (0.225,0.075,0.256), vector (0.075,0.025,0.256)};   
    //double x_init[] = {0.0362, 0.0767, 0.0709462, 0.076701, 0.0487134, 0.0767, 0.0709468, 0.08237, 0.08, 0.08237, 0.08, 0.08237};
    //double x_init[] = {0.02, 0.02, 0.0617347, 0.02, 0.0405667, 0.02, 0.0617703, 0.02, 0.0617716, 0.02, 0.0617722, 0.02};
    //double x_init[] = {0.02, 0.02, 0.06218, 0.02, 0.04098, 0.02, 0.06218, 0.02, 0.06218, 0.02, 0.06218, 0.02}; 
    //double x_init[] = {0.0444954, 0.103421, 0.08, 0.0973807, 0.0777296, 0.0976371, 0.08, 0.0974968, 0.08, 0.0973926, 0.08, 0.0989068};
    //double x_init[]={0.0444964, 0.103421, 0.08, 0.0973807, 0.0777296, 0.0976371, 0.08, 0.0974968, 0.08, 0.0973926, 0.08, 0.0989058};
    //double x_init[]={0.0309795, 0.0722979, 0.0611019, 0.02, 0.0519596, 0.02, 0.0611019, 0.02, 0.0611019, 0.02, 0.0611019, 0.0351696};
    //double x_init[]={0.0444933, 0.103416, 0.08, 0.0988707, 0.0777296, 0.0976371, 0.08, 0.0974968, 0.08, 0.0973926, 0.08, 0.0973889};
    //double x_init[]={0.23, 0.0797176, 0.23, 0.08, 0.23, 0.08, 0.23, 0.08, 0.23, 0.08, 0.23, 0.08};
    //double x_init[]={0.02, 0.0200605, 0.0299893, 0.02, 0.0232944, 0.02, 0.0423173, 0.02, 0.0717206, 0.02, 0.0524831, 0.0299423};
    //double x_init[]={0.02,0.0266936,0.170075,0.0317543,0.0570486,0.02,0.138593,0.0419202,0.207298,0.0200277,0.138037,0.0799834}; //Converged unconstraint
    //double x_init[]={0.02,0.0395397,0.121141,0.0387064,0.02,0.0444779,0.205236,0.0411809,0.151989,0.0352331,0.0834009,0.0613758}; // converged constraint
    //double x_init[]={0.034999,0.0561345,0.0999984,0.0641381,0.0500778,0.0520034,0.199999,0.0678482,0.150062,0.0559791,0.144999,0.0198543,0,0,4.79381e-12,0,1.97781e-05,0}; //converged unconstraint with radius
    //double x_init[]={0.0199261,0.0240042,0.167426,0.0200233,0.0902705,0.0181745,0.132303,0.0346212,0.21996,0.0244337,0.12479,0.0752612,0.00307063,0.0117016,0.00857439,0.011257,0.00311351,0.0136438,0.0168555,0.00832179,0.00959981,0.0115255,0.0202071,0.011095}; // converged with radius and thickness as design variables
    //double x_init[]={0.0463011,0.0425049,0.155157,0.0234658,0.0818766,0.026375,0.107493,0.0215432,0.225051,0.024125,0.0298354,0.0752943,0.0102464,0.00341094,0.0115575,0.0106317,0.0033895,0.0129945,0.010756,0.00982236,0.0103929,0.0107707,0.0100906,0.0117114}; // converged with radius and thickness as design variables init2
    //double x_init[]={0.0300218,0.0239669,0.14522,0.0213544,0.0803586,0.0384744,0.114062,0.0281273,0.225101,0.0241426,0.0698391,0.075313,0.00718243,0.00894416,0.00972276,0.0109995,0.00327913,0.0136816,0.0100811,0.0124102,0.011132,0.0091306,0.0143553,0.0110055}; // converged with radius and thickness as design variables init3
    //double x_init[]={0.0247085,0.0760587,0.164245,0.0794213,0.0914126,0.0615603,0.125491,0.0727395,0.220082,0.0760346,0.0798566,0.0245675,0.00702563,0.00784831,0.010341,0.0113569,0.00344958,0.0136948,0.0102445,0.0127304,0.0102914,0.00940511,0.0102454,0.0108726}; // converged with radius and thickness as design variables init4
    //double x_init[]={0.0248152,0.0239437,0.174918,0.0235367,0.0825589,0.0519268,0.102333,0.0779388,0.219412,0.0682832,0.097499,0.0206786,0.00724482,0.00806221,0.0121598,0.0113105,0.00367717,0.0117403,0.010037,0.0104756,0.00929433,0.0107503,0.0263813,0.00893851}; // converged with radius and thickness as design variables init5
    
    //double x_init[]={0.0224905,0.0198935,0.170111,0.0240464,0.0800918,0.0540204,0.112188,0.0775956,0.20443,0.0759084,0.08733,0.0219409,0.00579757,0.00724455,0.0130974,0.0108844,0.00673973,0.0111276,0.0129703,0.010989,0.0107887,0.01152,0.0121571,0.0108132}; //// converged with effective radius and thickness as design variables init5 obj: 533.9744611  
    //double x_init[]={0.025,0.025,0.175,0.025,0.225,0.075,0.125,0.075,0.075,0.075,0.075,0.025,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01};
    //double x_init[]={0.0225105,0.0238811,0.159695,0.0202648,0.118059,0.0742291,0.125606,0.0275261,0.220039,0.0220306,0.0914213,0.0419477,0.00560588,0.00851001,0.0140996,0.0112353,0.00490028,0.00966353,0.0122237,0.0117558,0.0116712,0.00967284,0.0150398,0.0106401}; //// converged with effective radius and thickness as design variables init2 obj: 533.9147114
    //double x_init[]={0.0199825,0.0762404,0.169464,0.0812872,0.129353,0.025198,0.132303,0.066069,0.219933,0.0839452,0.0925042,0.0789833,0.0034425,0.00927347,0.0134894,0.0115066,0.00379482,0.0107496,0.014392,0.00943938,0.0117086,0.0109814,0.0105189,0.00970516}; //// converged with effective radius and thickness as design variables init3 obj: 533.856243
    //double x_init[]={0.0199825,0.0762404,0.139464,0.0812872,0.099353,0.025198,0.102303,0.066069,0.189933,0.0839452,0.0625042,0.0789833,0.0034425,0.00927347,0.0134894,0.0115066,0.00379482,0.0107496,0.014392,0.00943938,0.0117086,0.0109814,0.0105189,0.00970516}; //// converged with effective radius and thickness as design variables init3 Modified obj: 533.856243
    //double x_init[]={0.0285351,0.0296186,0.178917,0.0229872,0.204519,0.0747943,0.114441,0.0218936,0.211573,0.0321604,0.0624042,0.0238,0.00541591,0.0129362,0.0124346,0.0053476,0.0118173,0.00521335,0.0104559,0.0100509,0.0127711,0.0101077,0.0103488,0.00999617}; //// converged with effective radius and thickness as design variables init4 obj: 533.7339838

    //double x_init[]={0.0218839,0.0218761,0.180997,0.0212588,0.214568,0.0747459,0.120145,0.0181218,0.20222,0.0383832,0.024777,0.0250517,0.0100975,0.0104471,0.0131015,0.00516059,0.0117043,0.00516114,0.0117791,0.0108117,0.0121524,0.0099802,0.00965665,0.00996647}; //// converged with second effective radius and thickness as design variables init2 obj: 536.4260021
    //double x_init[]={0.0218839,0.0218761,0.150997,0.0212588,0.184568,0.0747459,0.090145,0.0181218,0.17222,0.0383832,0.024777,0.0250517,0.0100975,0.0104471,0.0131015,0.00516059,0.0117043,0.00516114,0.0117791,0.0108117,0.0121524,0.0099802,0.00965665,0.00996647}; //// converged with Modified second effective radius and thickness as design variables init2 obj: 536.4260021
    //double x_init[]={0.0351394,0.0259757,0.187846,0.0234437,0.217476,0.0755923,0.11808,0.0231889,0.211791,0.0374294,0.059271,0.0240144,0.00919363,0.0103851,0.0122263,0.00666468,0.0106014,0.00697244,0.00986899,0.0100766,0.0110506,0.00990034,0.0103724,0.00975132}; /// converged with Modified second effective radius and thickness as design variables stress(2e9) obj: 544.2085772
    //double x_init[]={0.0211619,0.0317677,0.12301,0.0400994,0.050052,0.0381361,0.195037,0.0496117,0.17829,0.0378948,0.152622,0.062916,0.00624409,0.00572074,0.00542222,0.00750636,0.00570453,0.0129174,0.0102105,0.010855,0.0101222,0.0113137,0.0124944,0.0144297}; // Stress constraints 1.5e9 - converged with radius and thickness as design variables
    //double x_init[]={0.0215509,0.0261807,0.170619,0.0275686,0.0749766,0.0258837,0.134366,0.031314,0.210469,0.0256787,0.121162,0.0742672,0.00971141,0.00931913,0.00909424,0.00960475,0.00916624,0.0119463,0.0100851,0.00994485,0.0099919,0.0100127,0.0101515,0.0109884}; // Stress constraints 2.0e9 - converged with radius and thickness as design variables
    //double x_init[]={0.0271813,0.0251427,0.177123,0.0251418,0.077137,0.02515,0.127138,0.0251354,0.227101,0.0251386,0.131031,0.0748007,0.00997928,0.0100212,0.0100045,0.0100109,0.0100446,0.00997556,0.00999998,0.01,0.00999999,0.00999998,0.00999998,0.00999997}; // Heat Transfer Rate Objective: Stress constraints 2.0e9 - converged with radius and thickness as design variables

    //double x_init[]={0.0254522,0.0265661,0.190345,0.0251044,0.222106,0.0742462,0.119374,0.0257013,0.213575,0.0317078,0.0702071,0.0253827,0.00985252,0.00975822,0.0109978,0.00842981,0.0103793,0.00864064,0.0101737,0.00993565,0.0106942,0.00994209,0.0102435,0.00986579}; // Stress Pnorm constraints 2.4e9 - Almostconverged with Modified radius and thickness as design variables init2 obj: 550.5698252
    //double x_init[]={0.0238816,0.0257851,0.175219,0.0263851,0.220102,0.0739136,0.115243,0.0746515,0.076602,0.0712829,0.076927,0.0262851,0.00960018,0.00943591,0.00923021,0.0096232,0.0102124,0.0103191,0.00986267,0.00997125,0.00985391,0.0100535,0.0101349,0.0102154}; // Stress Pnorm constraints 2.3e9 - Almostconverged with Modified radius and thickness as design variables init3 obj: 550.9204805
    //double x_init[]={0.0246704,0.0256246,0.179515,0.0256632,0.219526,0.0740941,0.116177,0.07492,0.0761972,0.0700893,0.0771661,0.0261504,0.00947802,0.00911688,0.00901224,0.00943693,0.0102522,0.0105052,0.009886,0.0099296,0.00985218,0.0100061,0.0102377,0.0103405}; // Stress Pnorm constraints 2.3e9 - Almostconverged with Modified radius and thickness as design variables init33 obj: 548.6069739
    //double x_init[]={0.0282926,0.0258465,0.184861,0.0260807,0.221795,0.0739014,0.110398,0.0753089,0.0755888,0.0689882,0.0766965,0.0260935,0.00931713,0.00896689,0.00888734,0.00938493,0.0102275,0.0106164,0.00986841,0.00991695,0.00986265,0.010067,0.0102773,0.0104178}; // Stress Pnorm constraints 2.3e9 - Almostconverged with Modified radius and thickness as design variables init333 obj: 549.1306719
    //double x_init[]={0.0262367,0.0257179,0.181864,0.0258395,0.220495,0.0740132,0.113628,0.0750841,0.0759414,0.069617,0.0769689,0.0261266,0.0094099,0.00905343,0.0089595,0.0094151,0.0102419,0.0105521,0.00987864,0.00992431,0.00985656,0.0100317,0.0102543,0.010373}; // Stress Pnorm constraints 2.3e9 - Almostconverged with Modified radius and thickness as design variables init3333 obj: 549.9343448
    //double x_init[]={0.0252296,0.0256575,0.180361,0.0257254,0.21987,0.0740656,0.115257,0.0749778,0.0761071,0.0699213,0.0770967,0.026142,0.00945395,0.00909447,0.00899363,0.00942925,0.0102486,0.0105218,0.00988341,0.00992774,0.00985372,0.0100151,0.0102435,0.0103519}; // Stress Pnorm constraints 2.3e9 - Almostconverged with Modified radius and thickness as design variables init3333 obj:547.6473073
    //double x_init[]={0.0220265,0.0257194,0.178742,0.0259582,0.220723,0.0740157,0.114117,0.0751736,0.0752954,0.0679444,0.0765952,0.0261111,0.00912641,0.008821,0.00879512,0.00933622,0.0101456,0.0107365,0.00987592,0.0099104,0.00988484,0.01003,0.0102981,0.0104998}; // Stress Pnorm constraints 2.3e9 - Almostconverged with Modified radius and thickness as design variables init3333 obj: 548.3181079
    //double x_init[]={0.0243199,0.0252293,0.180224,0.024343,0.218134,0.0730657,0.113375,0.0784706,0.079936,0.0618774,0.0749618,0.0234454,0.00822538,0.0069109,0.00635043,0.0110109,0.0106239,0.0124661,0.00996368,0.00995373,0.00987133,0.010283,0.0108545,0.0107414}; // Stress Pnorm constraints 2.3e9 - Almostconverged with Modified radius and thickness as design variables init33333 obj: 537.8650771

    //double x_init[]={0.0172073,0.0228347,0.180017,0.0264102,0.184782,0.0722249,0.0771997,0.0775918,0.073674,0.0509568,0.107461,0.025667,0.00630744,0.00516091,0.00422101,0.0113048,0.0112099,0.0143886,0.0103647,0.0106347,0.0105371,0.0111032,0.011176,0.0112784}; // Debug - Converged No stress constraints, Mean Temperature objective init3 obj: 536.1221234
    //double x_init[]={0.0325459,0.0256087,0.167764,0.0218968,0.21812,0.0732303,0.0773381,0.0780191,0.0768081,0.0540296,0.0725401,0.0258718,0.00566708,0.00537785,0.00379343,0.0115417,0.0111829,0.0146549,0.00979076,0.00958638,0.00979372,0.0104392,0.011857,0.0112169}; // Debug - Converged No stress constraints, Mean Temperature objective, with Pressure Drop Constraint 0.0259129 init3 obj: 536.0890714 
    //double x_init[]={0.0248297,0.0238856,0.180086,0.0240274,0.218142,0.0730697,0.109307,0.0792154,0.0772238,0.066765,0.0739428,0.0245755,0.00747436,0.00685377,0.0062815,0.0104434,0.0114286,0.0128069,0.0101278,0.00992582,0.00988677,0.0103098,0.0107526,0.0117589}; // Debug - Converged with stress and pressure drop constraints, Mean Temperature objective init3 obj: 537.1919623 
    //double x_init[]={0.02062,0.0240064,0.180099,0.0263334,0.219089,0.0750128,0.129857,0.074404,0.0765502,0.0710764,0.0771221,0.0260142,0.00940981,0.00933279,0.0085151,0.00924561,0.0105477,0.010548,0.00984876,0.010033,0.00968426,0.00994047,0.010283,0.0102661}; // Debug - Converged with stress and pressure drop, clearance 0.001 constraints, Mean Temperature objective init3 obj: 549.5574844 
    //double x_init[]={0.0245668,0.0238287,0.175024,0.0280214,0.214232,0.0742954,0.108567,0.0795668,0.0693534,0.0682494,0.0757665,0.0240112,0.00788276,0.00755536,0.00644459,0.0100916,0.0107486,0.0130081,0.00998372,0.00983442,0.00986763,0.0100008,0.00997297,0.010971}; // Debug - AlmostConverged with stress and pressure drop, clearance 0.0 constraints, Mean Temperature objective init3 obj: 549.5574844 
    //double x_init[]={0.024711,0.0238731,0.175067,0.027996,0.214348,0.0741462,0.109403,0.0792187,0.0695075,0.0683754,0.0747721,0.0239434,0.00746019,0.00704623,0.00627982,0.0105321,0.0108215,0.013278,0.0100508,0.0101955,0.00989732,0.00999584,0.00999344,0.0106497}; // Converged with stress and pressure drop, clearance 0.0 constraints, Mean Temperature objective init3 obj: 538.5811542
    //double x_init[]={0.0285182,0.0220532,0.180054,0.026119,0.199784,0.0719692,0.130384,0.0761473,0.0747508,0.0741808,0.0743239,0.0243747,0.00968906,0.00777079,0.00740265,0.00531784,0.012994,0.0118496,0.0120244,0.0106032,0.0109468,0.0100997,0.0128252,0.0120392}; // Converged with stress (2.5e9) and pressure drop, clearance 0.0001 constraints, Mean Temperature objective init3 obj: 539.0571637  
//Info<< "I created vector of Arrays" << endl;
    double ra = 0.01;
    double rb = 0.02;
    //double r_samp = 0.001369;
    //double r_samp = 0.0025;
    double r_samp = 0.0025*1.25;
    //double r_samp = 0.005 / 4;
    double Rho_a = 0.0;
    double Rho_b = 0.0;
    //double b = 1e9;
    double r_eff = 1;
    double t_eff = 1;
    double k =1500;

    for (int I = 0; I < len; I++) 
    {

        //std::fstream myfile("example.txt", std::ios::app | std::ios::out);
        //myfile.open ("example.txt");
        //myfile << "Writing to a file, Loop:" << I << "\n";
        //myfile.close();


        //vector x_0 = X_0[I];
        //vector x_f = X_f[I];
        vector x_0 = vector (x_init[2*(I+1)-2],x_init[2*(I+1)-1],0);
        vector x_f = vector (x_init[2*(I+1)-2],x_init[2*(I+1)-1],0.256);
        //ra = x_init[2*len + I];
        //rb = ra + 0.01;
        //rb = ra + x_init[3*len + I];

        //Info<< "Circle " << I << " Radius: " << ra << "Thickness: " << rb-ra << endl;

        //Computing effective radii and Thickness
	    //r_eff = Foam::pow(x_init[2*len + I],4.0);
        //t_eff = Foam::pow(x_init[3*len + I],4.0);
	    r_eff = x_init[2*len + I] - 0.002;
        t_eff = x_init[3*len + I] - 0.002;

        //ra = x_init[2*len + I] * (1 - Foam::exp(-b*t_eff) + t_eff*Foam::exp(-b));
        //rb = ra + (x_init[3*len + I] * (1 - Foam::exp(-b*r_eff) + r_eff*Foam::exp(-b)));
        ra = x_init[2*len + I]/(1 + Foam::exp(-2*k*t_eff));
        rb = ra + (x_init[3*len + I]/(1 + Foam::exp(-2*k*r_eff)));

        //Info<< "Effective Circle " << I << " Radius: " << ra << "Thickness: " << rb-ra << endl;

        vector a = x_f - x_0;
        double l_b = Foam::sqrt(a[0]*a[0] + a[1]*a[1] + a[2]*a[2]);

        vector a_b = a/l_b;

        vector x_e0 = Cell[cellI] - x_0;

        double l_be = a_b[0]*x_e0[0] + a_b[1]*x_e0[1] + a_b[2]*x_e0[2];

        vector a_be = l_be * a_b;

        vector r_be_bar = x_e0 - a_be;

        double r_be = Foam::sqrt(r_be_bar[0]*r_be_bar[0] + r_be_bar[1]*r_be_bar[1] + r_be_bar[2]*r_be_bar[2]);

        double d_be;
        if (l_be <= 0) 
        {
            d_be = Foam::sqrt(x_e0[0]*x_e0[0] + x_e0[1]*x_e0[1] + x_e0[2]*x_e0[2]);
        }
        else if (l_be > l_b)
        {
            vector x_ef = Cell[cellI] - x_f;

            d_be = Foam::sqrt(x_ef[0]*x_ef[0] + x_ef[1]*x_ef[1] + x_ef[2]*x_ef[2]);
        }
        else
        {
            d_be = r_be;
        }

        double phia = d_be - ra;
        double phib = d_be - rb;

        double rho_a = 0.0;
        if ((phia / r_samp) < -1)
        {
            rho_a = 1.0;
        }
        else if ((phia / r_samp) >= -1 && (phia / r_samp) <= 1)
        {
            double x = phia / r_samp;
            rho_a = 1.0 - (1.0 / 2.0) - (3 * x / 4) + (x * x * x / 4);
        }
        else if ((phia / r_samp) > 1)
        {
            rho_a = 0.0;
        }

        double rho_b = 0.0;
        if ((phib / r_samp) < -1)
        {
            rho_b = 1.0;
        }
        else if ((phib / r_samp) >= -1 && (phib / r_samp) <= 1)
        {
            double x = phib / r_samp;
            rho_b = 1.0 - (1.0 / 2.0) - (3 * x / 4) + (x * x * x / 4);
        }
        else if ((phia / r_samp) > 1)
        {
            rho_b = 0.0;
        }
 
    //Rho_a = Rho_a + rho_a;
    //Rho_b = Rho_b + rho_b;
    Rho_a = max(Rho_a, rho_a);
    Rho_b = max(Rho_b, rho_b);
    }
    

    vf1[cellI] = 1 - (Rho_b - Rho_a);
    vf2[cellI] = 1 - Rho_a;
    vf3[cellI] = 1 - Rho_b;
    //vf2[cellI] = 2;

    if (vf1[cellI] == 2 && vf2[cellI] == 0) 
    {
        Info<< "This is cell " << cellI << endl;
        Info<< "This is cell centre coordinate " << Cell[cellI][0] << " " << Cell[cellI][1] << " " << Cell[cellI][2] << endl;
        Info<< "This is vf1 " << ": " << vf1[cellI] << endl;
        Info<< "This is vf2 " << ": " << vf2[cellI] << endl;
    }


